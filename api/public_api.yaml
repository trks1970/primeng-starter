openapi: 3.0.3
info:
    title: One Customer Id / 1CID
    description: |
        Manages customer addresses and maps them between different systems.
    version: "2.0-20240208-1"

security:
    - ApiKeyAuth: []

servers:
    - url: https://mediversems.hcedi-test.arvato-scs.digital/
      description: dev / test
    - url: https://mediversems-uat.hcedi.arvato-scs.digital/
      description: uat / integration
    - url: https://mediversems.hcedi.arvato-scs.digital/
      description: production / live

paths:
    /v2/address:
        post:
            tags:
                - customerData
            operationId: upsertCustomerData
            summary: |
                create or update address of a customer in 1CID.
                If an address for the same "clientId, customerId, role & channel" exists, it will be overwritten with the data from the latest request.
            requestBody:
                $ref: "#/components/requestBodies/UpsertCustomerDataRequest"
            responses:
                "202":
                    description: Accepted
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/address/filter:
        post:
            tags:
                - address
            operationId: findAddress
            summary: |
                Find Address(es) by supplied MappingIdFilter
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MappingIdFilter'
            responses:
                "202":
                    description: OK
                    content:
                        'application/json':
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/OcidAddress'
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/transferAddress:
        post:
            tags:
                - address
            operationId: transferAddress
            summary: |
                Trigger the copy of all customer data from a source to a target, effectively creating a new business partner in the target system if it does not yet exist there.
                Currently, transfers are only supported FROM client "Mediverse online" TO clients in SAP.
                The actual transfer happens async after the request.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            description: A list of one or multiple transferAddress requests
                            type: array
                            minItems: 1
                            maxItems: 300
                            items:
                                $ref: '#/components/schemas/Transfer'
            responses:
                "200":
                    $ref: "#/components/responses/BatchTransferResult"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/validateCustomerVatId:
        post:
            tags:
                - validation
            operationId: validateVatId
            summary: |
                Trigger a check of the VAT-ID for the specified address.
                Check will happen async after the request. Negative check results will be handled by additional processes automatically.
                Response will also be positive (202) when the specified address does not have a VAT-ID attached to it.
            requestBody:
                $ref: "#/components/requestBodies/TriggerValidateVatIdRequest"
            responses:
                "202":
                    description: Accepted
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/validationStatus:
        post:
            tags:
                - validation
            operationId: setValidationStatus
            summary: |
                Forcefully set the validation status of a specific address.
            requestBody:
                $ref: "#/components/requestBodies/SetValidationStatusRequest"
            responses:
                "202":
                    description: Accepted
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/lookup:
        post:
            tags:
                - lookup
            operationId: lookup
            description: Lookup one or more mappings from a specific source-client
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            description: A list of one or multiple lookup requests
                            type: array
                            minItems: 1
                            maxItems: 300
                            items:
                                $ref: '#/components/schemas/Lookup'
            responses:
                "200":
                    $ref: "#/components/responses/BatchLookupResult"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "401":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
                "500":
                    $ref: "#/components/responses/ErrorResponse"

    /v2/mappings:
        post:
            tags:
                - oneIdMappingPublic
            operationId: createMapping
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/MappingRequest'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        'application/json':
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/OneId'
                '400':
                    $ref: "#/components/responses/ErrorResponse"
                '401':
                    $ref: "#/components/responses/ErrorResponse"
                '403':
                    $ref: "#/components/responses/ErrorResponse"
                '404':
                    $ref: "#/components/responses/ErrorResponse"
                '500':
                    $ref: "#/components/responses/ErrorResponse"

components:
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: X-API-Key

    # parent: always SOLD_TO
    # children: SHIP_TO or BILL_TO
    requestBodies:
        UpsertCustomerDataRequest:
            required: true
            content:
                "multipart/form-data":
                    schema:
                        type: object
                        required:
                            - data
                        properties:
                            data:
                                $ref: '#/components/schemas/CustomerData'
                            licenseDocuments:
                                $ref: '#/components/schemas/LicenseDocuments'
                    encoding:
                        data:
                            contentType: application/json
                        licenseDocuments:
                            contentType: image/png, image/jpeg, application/pdf

        TriggerValidateVatIdRequest:
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MappingId'

        SetValidationStatusRequest:
            required: true
            content:
                multipart/form-data:
                    schema:
                        required:
                            - data
                        description: defines a validation status for a specific address
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/AddressValidationStatus'
                            licenseDocuments:
                                $ref: '#/components/schemas/LicenseDocuments'
                    encoding:
                        data:
                            contentType: application/json
                        licenseDocuments:
                            contentType: image/png, image/jpeg, application/pdf

    responses:

        ErrorResponse:
            description: generic error response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'

        BatchTransferResult:
            description: The request was syntactically correct
            content:
                application/json:
                    schema:
                        description: List of one or many results. Every requested transfer is part of the result. If a transfer failed, it will have the appropriate statusCode
                        type: array
                        minItems: 1
                        items:
                            $ref: '#/components/schemas/TransferResult'

        BatchLookupResult:
            description: The request was syntactically correct and lookup was performed
            content:
                application/json:
                    schema:
                        description: List of one or many results. Every requested lookup is part of the result. If a lookup failed, it will have the appropriate statusCode
                        type: array
                        minItems: 1
                        items:
                            $ref: '#/components/schemas/LookupResult'

    schemas:

        LicenseDocuments:
            description: |
                Zero or more images (PNG, JPEG, PDF) of license-related documents for validation purposes.
                License documents are required for any address of role SOLD_TO or SHIP_TO. They are not required for BILL_TO or PAYER.
            type: array
            items:
                type: string
                format: byte # base64 encoded

        LookupResult:
            description: |
                The lookup-result for one business partner / debitor / ..
                Will contain data from the original request for mapping purposes, as well as the status of the lookup.
                If the lookup was successful, the result / customerId will contain the customerId for the requested target.
            type: object
            required:
                - fromClientId
                - fromCustomerId
                - role
                - statusCode
                - toClientId
            additionalProperties: false
            properties:
                fromClientId:
                    $ref: "#/components/schemas/ClientId"
                fromCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                toClientId:
                    $ref: "#/components/schemas/ClientId"
                toCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
                statusCode:
                    $ref: "#/components/schemas/LookupStatus"

        TransferResult:
            description: |
                The transfer-result for one business partner / debitor / ..
                Will contain data from the original request for mapping purposes, as well as the status of the transfer.
            type: object
            required:
                - fromClientId
                - fromCustomerId
                - role
                - statusCode
                - toClientId
            additionalProperties: false
            properties:
                fromClientId:
                    $ref: "#/components/schemas/ClientId"
                fromCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                toClientId:
                    $ref: "#/components/schemas/ClientId"
                toCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
                statusCode:
                    $ref: "#/components/schemas/TransferStatus"

        LookupStatus:
            description: |
                The status of this lookup.

                Mappings of status "OUTDATED" have a newer address on the other side of the mapping. Most likely, the customer changed their address in Mediverse Online.
                When you encounter a mapping with this status, you should NOT use it, but trigger an address update in the target system and set the status to "UPDATE_REQUESTED"

                Mappings of status "UPDATE_REQUESTED" are still outdated on this side of the mapping, but an address update has already been triggered.
                When you encounter a mapping with this status, you should NOT use it, but wait some time (multiple minutes) to re-request the mapping.
                This may need to happen in a loop, until the status is back to "SUCCESS"
            type: string
            enum:
                - SUCCESS
                - OUTDATED
                - UPDATE_REQUESTED
                - CLIENT_UNKNOWN
                - NOT_FOUND

        TransferStatus:
            description: |
                The status of this transfer.
            type: string
            enum:
                - CLIENT_UNKNOWN
                - NOT_FOUND
                - PARENT_NOT_FOUND
                - NO_TARGET_PARENT_MAPPING
                - CREATE_SUCCESS
                - UPDATE_SUCCESS



        AddressValidationStatus:
            description: the reference to an address as application/json
            type: object
            additionalProperties: false
            required:
                - clientId
                - customerId
                - role
                - distributionChannel
                - validator
                - validationStatus
                - validationStatusDate
            properties:
                clientId:
                    $ref: "#/components/schemas/ClientId"
                customerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
                validator:
                    $ref: "#/components/schemas/Validator"
                validationStatus:
                    $ref: "#/components/schemas/ValidationStatus"
                validationStatusDatetime:
                    $ref: "#/components/schemas/ValidatationStatusDatetime"

        Transfer:
            description: |
                defines source (client, customer, role, distributionChannel) and target
                Data for one business partner / debitor.
                One "business partner" is defined by the client it is stored in, the customers Id, role and distributionChannel of the customer.
            type: object
            required:
                - fromClientId
                - fromCustomerId
                - role
                - distributionChannel
                - toClientId
            properties:
                fromClientId:
                    $ref: "#/components/schemas/ClientId"
                fromCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                toClientId:
                    $ref: "#/components/schemas/ClientId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"

        Lookup:
            description: |
                defines source (client, customer, role, distributionChannel) and target
                Data for one business partner / debitor.
                One "business partner" is defined by the client it is stored in, the customers Id, role and distributionChannel of the customer.
            type: object
            required:
                - fromClientId
                - fromCustomerId
                - role
                - distributionChannel
                - toClientId
            properties:
                fromClientId:
                    $ref: "#/components/schemas/ClientId"
                fromCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                toClientId:
                    $ref: "#/components/schemas/ClientId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"

        ParentLookup:
            deprecated: true
            description: |
                gets parent of customerId with role
            type: object
            required:
                - clientId
                - customerId
                - role
                - distributionChannel
                - parentRole
            properties:
                clientId:
                    $ref: "#/components/schemas/ClientId"
                customerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
                parentRole:
                    $ref: "#/components/schemas/Role"

        MappingId:
            description: defines which address (client, customer, role, distributionChannel) to check the VAT-ID for.
            type: object
            required:
                - clientId
                - customerId
                - role
                - distributionChannel
            properties:
                clientId:
                    $ref: "#/components/schemas/ClientId"
                customerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"

        MappingIdFilter:
            type: object
            required:
                - clientId
            properties:
                clientId:
                    $ref: "#/components/schemas/ClientId"
                customerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"

        Error:
            type: object
            properties:
                status:
                    type: integer
                message:
                    type: string
                detail:
                    type: object

        CustomerDataId:
            description: |
                The Id of a customer.
                This idenfies the partner / debitor, e.g. a pharmacy.
            type: string
            minLength: 1
            maxLength: 128
            example: "0010009270"

        ClientId:
            description: |
                The Id of a client.
                This Id identifies a client, like an "SAP Mandant".
            type: string
            minLength: 1
            maxLength: 128
            example: "0010009270"

        CustomerData:
            description: the data for this address as application/json
            type: object
            required:
                - clientId
                - customerId
                - role
                - distributionChannel
                - language
                - address
                - communication
                - vatId
            properties:
                clientId:
                    $ref: "#/components/schemas/ClientId"
                customerId:
                    $ref: "#/components/schemas/CustomerDataId"
                role:
                    $ref: "#/components/schemas/Role"
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
                language:
                    $ref: "#/components/schemas/Language"
                parentCustomerId:
                    $ref: "#/components/schemas/CustomerDataId"
                address:
                    $ref: "#/components/schemas/Address"
                communication:
                    $ref: "#/components/schemas/Communication"
                vatId:
                    $ref: "#/components/schemas/VatId"
                invoiceChannel:
                    $ref: "#/components/schemas/InvoiceChannel"
                validation:
                    $ref: "#/components/schemas/Validation"

        Role:
            description: The role of a customer
            type: string
            enum:
                - SOLD_TO
                - SHIP_TO
                - BILL_TO
                - PAYER

        DistributionChannel:
            description: distribution channel for this entity
            type: string
            enum:
                - NONE
                - PUBLIC_PHARMACY
                - HOSPITAL_SUPPLY_PHARMACY
                - HOSPITAL
                - WHOLESALE

        Language:
            description: communication-language in ISO-639-1 (Alpha-2)
            type: string
            minLength: 2
            maxLength: 2
            example: "de"

        Address:
            description: the postal address for this customer
            type: object
            additionalProperties: false
            required:
                - companyName
                - street
                - zipcode
                - city
                - country
            properties:
                companyName:
                    description: name of the company
                    type: string
                    minLength: 1
                    maxLength: 40
                    example: "Tulpen-Apotheke"
                owner:
                    description: owner of the company, if applicable
                    type: string
                    minLength: 1
                    maxLength: 40
                    example: "Karin Musterperson"
                street:
                    description: name of the street WITHOUT housenumber
                    type: string
                    minLength: 1
                    maxLength: 60
                    example: "Blumengasse"
                housenumber:
                    description: housenumber
                    type: string
                    minLength: 0
                    maxLength: 10
                    example: "13a"
                zipcode:
                    description: zipcode
                    type: string
                    minLength: 1
                    maxLength: 10
                    example: "33333"
                city:
                    description: city or town
                    type: string
                    minLength: 1
                    maxLength: 40
                    example: "Gütersloh"
                country:
                    description: country as ISO 3166-1 (Alpha-2)
                    type: string
                    minLength: 2
                    maxLength: 2
                    example: "DE"
                region:
                    description: region, state or province. Value must be ahdering to ISO 3166-2.
                    type: string
                    minLength: 4
                    maxLength: 12
                    example:
                        - DE-NW
                        - FR-NOR
                        - GB-WSX

        OcidAddress:
            type: object
            required:
                - mappingId
                - address
            properties:
                mappingId:
                    $ref: '#/components/schemas/MappingId'
                address:
                    $ref: '#/components/schemas/Address'
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/OcidAddress'

        Validation:
            description: forcefully set a specific validation status
            additionalProperties: false
            required:
                - validator
                - validationStatus
                - validationStatusDatetime
            properties:
                validator:
                    $ref: "#/components/schemas/Validator"
                validationStatus:
                    $ref: "#/components/schemas/ValidationStatus"
                validationStatusDatetime:
                    $ref: "#/components/schemas/ValidatationStatusDatetime"
        Communication:
            description: list of additional communication channels
            additionalProperties: false
            properties:
                fax:
                    description: FAX number (without international prefix)
                    type: string
                    minLength: 5
                    maxLength: 30
                    example: "05241 8071111"
                phone:
                    description: phone number (without international prefix)
                    type: string
                    minLength: 5
                    maxLength: 30
                    example: "0511 89995 5650"
                email:
                    description: email address
                    type: string
                    format: email
                    minLength: 6
                    maxLength: 241
                    example: "sales@example.org"
        InvoiceChannel:
            type: object
            description: information about the selected channel for invoicing, including addressing information
            oneOf:
                - $ref: "#/components/schemas/InvoiceChannelPostal"
                - $ref: "#/components/schemas/InvoiceChannelEInvoice"
                - $ref: "#/components/schemas/InvoiceChannelEMail"
            discriminator:
                propertyName: "channel"
        InvoiceChannelPostal:
            description: invoicing via postal / mail
            type: object
            required:
                - channel
            properties:
                channel:
                    description: invoice-channel "postal"
                    type: string
                    enum:
                        - postal
        InvoiceChannelEInvoice:
            description: invoicing via e-invoice
            type: object
            required:
                - channel
                - portal
                - routingId
            properties:
                channel:
                    description: invoice-channel "eInvoice"
                    type: string
                    enum:
                        - eInvoice
                portal:
                    description: which portal to use for e-invoicing
                    type: string
                    minLength: 2
                    maxLength: 15
                routingId:
                    description: address / id / routing code / "Leitwegs-Id" of the invoice receiver
                    type: string
                    minLength: 2
                    maxLength: 60
                    example: 991-15601-05
        InvoiceChannelEMail:
            description: invoicing via e-mail
            type: object
            required:
                - channel
                - email
                - format
            properties:
                channel:
                    description: invoice-channel "email"
                    type: string
                    enum:
                        - eMail
                email:
                    description: email address FOR INVOICING
                    type: string
                    format: email
                    minLength: 6
                    maxLength: 241
                    example: "invoices@example.org"
                format:
                    description: desired format of the invoice
                    type: string
                    minLength: 1
                    maxLength: 15
        VatId:
            description: VAT identification number
            type: string
            minLength: 4
            maxLength: 60
            example: DE999999999

        Validator:
            description: |
                Name of the system / entity which decided on the new validation status.
                Will be stored for auditing purposes.
            type: string
            minLength: 2
            maxLength: 24

        ValidationStatus:
            description: the validation status for an address
            type: string
            enum:
                - "UNKNOWN"
                - "INVALID"
                - "VALID"

        ValidatationStatusDatetime:
            description: date and time of the last validation status change
            type: string
            format: date-time
            example: "2023-08-13T13:56:17Z"

        OneId:
            type: object
            required:
                - id
            properties:
                id:
                    $ref: '#/components/schemas/Uuidv4'

        Uuidv4:
            type: string
            format: uuid
            # pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

        MappingRequest:
            required:
                - createdBy
                - distributionChannel
                - fromClientId
                - fromCustomerId
                - role
                - toClientId
                - toCustomerId
            type: object
            properties:
                fromClientId:
                    type: string
                fromCustomerId:
                    type: string
                toClientId:
                    type: string
                toCustomerId:
                    type: string
                role:
                    $ref: "#/components/schemas/Role"
                createdBy:
                    type: string
                distributionChannel:
                    $ref: "#/components/schemas/DistributionChannel"
